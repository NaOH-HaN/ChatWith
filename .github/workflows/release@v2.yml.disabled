name: Build and Release

on:
  push:
    tags:
      - 'Release-v*'
      - 'Pre-Release-v*'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build executable
      run: |
        pyinstaller --onefile --name ChatWith src/main.py

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ChatWith-Build
        path: |
          dist/
          LICENSE
          NOTICE

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: ChatWith-Build
        path: release-assets

    - name: Get current time
      id: get-time
      run: echo "time=$(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT

    - name: Parse tag
      id: parse-tag
      env:
        TAG: ${{ github.ref_name }}
      run: |
        if [[ "$TAG" == Pre-Release-* ]]; then
          echo "is_prerelease=true" >> $GITHUB_OUTPUT
          version=${TAG/Pre-Release-/}
        else
          echo "is_prerelease=false" >> $GITHUB_OUTPUT
          version=${TAG/Release-/}
        fi
        echo "version=${version/v/}" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: ChatWith ${{ steps.parse-tag.outputs.version }}
        prerelease: ${{ steps.parse-tag.outputs.is_prerelease }}
        files: |
          release-assets/dist/ChatWith.exe
          release-assets/LICENSE
          release-assets/NOTICE
        body: |
          ### 自动生成版本
          **构建时间**：$(date -u '+%Y-%m-%d %H:%M:%S UTC')